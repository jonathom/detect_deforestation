knitr::opts_chunk$set(echo = TRUE)
library(stars)
library(stars)
subdir = "L8cube_subregion"
f = paste0(subdir, "/", list.files(subdir))
st = read_stars(f)
mapview(st[5,,])
library(mapview)
mapview(st[5,,])
mapview(st[5,,])
install.packages("gapfill")
library(gapfill)
gapfill(merge(st))
Gapfill(merge(st))
merge(st)
?Gapfill
plot(merge(st))
library(stars)
library(gapfill)
subdir = "L8cube_subregion"
f = paste0(subdir, "/", list.files(subdir))
st = read_stars(f)
st = read_stars(f)
plot(merge(st))
image(ndvi)
Image(ndvi)
knitr::opts_chunk$set(echo = TRUE)
library(gdalcubes)
library(magrittr)
gdalcubes_options(threads=8)
IMAGE_DIR = "L8_cropped" # please change
col = create_image_collection(list.files(IMAGE_DIR, recursive = TRUE, pattern=".tif", full.names  = TRUE), "L8_SR")
# only use "clear" pixels
L8.clear_mask = image_mask("PIXEL_QA", values=c(322, 386, 834, 898, 1346, 324, 388, 836, 900, 1348), invert = TRUE)
# example yearly data cube at 250m spatial resolution
v = cube_view(srs="EPSG:3857", extent=col, dx=250, dy=250, dt="P1Y", resampling = "average", aggregation = "median")
# calculate NDVI and export as GeoTIFF files at subfolder "L8cube"
raster_cube(col, v, L8.clear_mask) %>%
select_bands(c("B04", "B05")) %>%
apply_pixel("(B05-B04)/(B05+B04)") %>%
write_tif("../L8cube",prefix = "NDVI_")
# remotes::install_github("r-spatial/stars")
library(stars)
subdir = "/home/petra/Studium/ASTD/L8cube"
f = paste0(subdir, "/", list.files(subdir))
